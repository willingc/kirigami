{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"kirigami","text":"<p>Kirigami is a simple tool to shape and cut text.</p>"},{"location":"#mixed-messages","title":"Mixed messages","text":"<p>Email, mailing list threads, Discourse topics, and Discord messages proliferate. They are a great way to communicate, but they can be hard to follow.</p> <p>Take the example of a Discourse topic. After twenty replies, it can be timeconsuming to read through the entire thread to find the information you need.</p> <p>Summaries can help with this. Though summaries often lose the context of the original message.</p>"},{"location":"#time-is-fluid","title":"Time is fluid","text":"<p>Conversations and dialogues are fluid. They evolve over time, and take on new directions as they progress. How do you capture the flow of the conversation, while still keeping the original context?</p>"},{"location":"#recaps","title":"Recaps","text":"<p>While recaps of a conversation can be helpful, they are filtered through the lens of the person who wrote them. They may be biased, or miss key details.</p>"},{"location":"#numerical-datasets","title":"Numerical datasets","text":"<p>We have best practices for an initial view of a numerical dataset. We run basic statistics, and visualize the data to get a sense of what we are looking at.</p> <p>What's the equivalent for a dataset of dialogue's text messages?</p>"},{"location":"json_tools/","title":"JSON tools","text":""},{"location":"json_tools/#command-line","title":"Command line","text":""},{"location":"json_tools/#jq","title":"<code>jq</code>","text":""},{"location":"json_tools/#gron","title":"<code>gron</code>","text":"<ul> <li>written in go</li> <li><code>--ungron</code> Can turn filtered data back into JSON.</li> <li>makes diffing easy <code>diff &lt;(gron two.json) &lt;(gron two-b.json)</code></li> <li>grep for something <code>gron testdata/two.json | grep twitter</code></li> </ul>"},{"location":"json_tools/#examples-for-discourse","title":"Examples for Discourse","text":"<p><code>gron notebooks/pkg.json | grep cooked</code> to get post content only   </p>"},{"location":"json_tools/#jnv","title":"<code>jnv</code>","text":"<ul> <li>written in rust</li> <li>interactive JSON viewer and <code>jq</code> filter</li> <li><code>jnv data.json</code></li> </ul>"},{"location":"realworld/","title":"Real world examples","text":"<ol> <li>Quote extraction from Guardian for modular journalism</li> </ol>"},{"location":"systems_thinking/","title":"Systems Thinking","text":""},{"location":"systems_thinking/#primary-goals","title":"Primary Goals","text":"<ul> <li>Save time</li> <li>Gain context</li> <li>Deepen understanding</li> </ul> <p>The initial goals are to create a tool that allows viewing individual messages and metadata in a way that allows the reader to view the conversation in different ways. Culling out the noise (cutting some messages) and focusing on the signal of the conversation.</p>"},{"location":"systems_thinking/#collection-of-messages-aka-topic-or-thread","title":"Collection of Messages (aka Topic or Thread)","text":"<p>It would be nice to have a generic way to refer to the collection that doesn't evoke preconceived notions based on the messaging platform.</p> <p>Possibilities: - collection - set - topic - thread - conversation - discussion - series - chain - sequence</p> <p>For now, I'll use \"conversation\" as a placeholder.</p>"},{"location":"systems_thinking/#metadata","title":"Metadata","text":""},{"location":"systems_thinking/#conversation","title":"Conversation","text":"<ul> <li>title</li> <li>id</li> <li>first_message_author</li> <li>first_message_timestamp</li> <li>estimated_read_time</li> <li>last_post_timestamp</li> <li>calculated_conversation_length</li> <li>number_of_messages</li> <li>number_of_unique_authors</li> </ul>"},{"location":"systems_thinking/#individual-message","title":"Individual message","text":"<ul> <li>id</li> <li>author_name</li> <li>author_id</li> <li>timestamp</li> <li>message_length</li> <li>messaage_text</li> <li>response_to_message_id</li> <li>contains_link</li> </ul>"},{"location":"systems_thinking/#author","title":"Author","text":"<ul> <li>id</li> <li>name</li> <li>username</li> <li>additional_privileges (bool)</li> </ul>"},{"location":"systems_thinking/#shape-of-data","title":"Shape of data","text":"<p>This allows visualization of the data.</p> <ul> <li>Timeline of messages</li> <li>Tree of messages</li> <li>Cluster messages by author</li> <li>Cluster message by keyword</li> </ul>"},{"location":"systems_thinking/#calculated-info-and-metrics","title":"Calculated Info and Metrics","text":"<p>Initial set of calculated metrics</p>"},{"location":"systems_thinking/#conversation-metrics","title":"Conversation Metrics","text":"<ul> <li>messages_per_day</li> <li>median_timestamp</li> <li>75_timestamp</li> <li>90_timestamp</li> <li>25_timestamp</li> </ul>"},{"location":"systems_thinking/#blocks","title":"Blocks","text":"<ul> <li>Ingest messages</li> <li>Display conversation metadata</li> <li>Display authors</li> <li>Display frequent authors</li> <li>Display message</li> <li>Display message metadata</li> <li>Display shape of data</li> </ul>"},{"location":"systems_thinking/#ingest-messages","title":"Ingest messages","text":"<p>Plug-in support for different messaging platforms</p> <ul> <li>Discourse</li> <li>Email</li> <li>Discord</li> <li>Slack</li> </ul>"},{"location":"tools/","title":"Tools","text":""},{"location":"tools/#annotation","title":"Annotation","text":"<ul> <li>Prodigy from Spacy: Easy to use, can be installed locally (<code>pip install ./prodigy.whl</code>). Named entities, text classification, span categorization. <code>prodigy ner.manual reviews_ner en_core_web_sm ./data.jsonl --label PRODUCT,PERSON,ORG</code> then use the launched webserver. Can annotate within JupyterLab. Cost: $390/personal lifetime.</li> </ul>"},{"location":"usecase/","title":"Use case","text":""},{"location":"usecase/#discusspythonorg","title":"discuss.python.org","text":"<p>A very long topic https://discuss.python.org/t/lock-files-again-but-this-time-w-sdists/46593</p> <ul> <li>17 days</li> <li>291 replies</li> <li>43 users</li> <li>7.1k views</li> <li>Frequent posters: 8 people with over 10 posts; 51, 35, 32, 24, 20 as top 5</li> <li>Popular links: 50</li> <li>Estimated read time of 155 minutes</li> </ul>"},{"location":"usecase/#estimated-read-time","title":"Estimated read time","text":"<p>Approximately 2.5 hours to read the entire top and join the conversation now. Yes, there are folks that are trying to catch up now.</p>"},{"location":"usecase/#a-readers-options-after-17-days","title":"A reader's options after 17 days","text":"<ol> <li>Devote 2.5 hours to read</li> <li>Skim and hope for the key points</li> <li>Ask someone to summarize</li> <li>Try to follow from where the conversation is.</li> </ol>"},{"location":"usecase/#what-would-help","title":"What would help?","text":""},{"location":"usecase/#discourse-ai-summarization-plugin","title":"Discourse AI - Summarization plugin","text":"<p>https://meta.discourse.org/t/discourse-ai-summarization/262711 </p> <p>Admins can use via <code>summarization_strategy</code> site:</p> <pre><code>A collection of open-source models from HuggingFace: bart-large-cnn-samsum, flan-t5-base-samsum, and long-t5-tglobal-base-16384-book-summary.\nOpenAI ChatGPT, using either gpt-3.5-turbo or gpt-4.\nAnthropic Claude\u2019s V1 and V2 models.\n</code></pre> <p>Discourse didn't find existing models good enough and switched to LLMs</p> <p>Fairly inflexible at the moment</p>"},{"location":"usecase/#another-option-merfields-plugin","title":"Another option Merfield's plugin","text":"<p>https://github.com/merefield/discourse-ai-topic-summary</p> <p>Ruby - Discourse bot</p> <p>JavaScript - Display on page</p>"}]}